name: Image Build and Scan

on:
  pull_request:
    branches:
      - main  # or your default branch
  workflow_dispatch:  # allows manual run from GitHub UI

jobs:
  build-cli:
    name: build-cli
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: postgres:latest
      PROJECT_KEY: default # Set the desired project to run the cli scanning with
    
    steps:
    # checks-out your repository under $GitHub_WORKSPACE, so your workflow can access it.
    - name: Checkout
      uses: actions/checkout@v2

    # Build your docker image, that is going to be scanned in the next step
    - name: Docker Image Build
      run: docker build -t postgres:latest .
  
    # Run Orca CLI against the previously created container image
    - name: Orca CLI - Security Scanning
      env:
        ORCA_SECURITY_API_TOKEN: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
      run: |
        set +e
        sudo apt update && sudo apt install -y curl
        curl -sfL 'https://raw.GitHubusercontent.com/orcasecurity/orca-cli/main/install.sh' | bash
        orca-cli -p "${PROJECT_KEY}" image scan ${IMAGE_NAME} --output orca-scan-summary.txt
        
    - name: Comment on PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('orca-scan-summary.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üõ°Ô∏è **Orca Security Scan Results:**\n\n\`\`\`\n${summary}\n\`\`\``
            });
